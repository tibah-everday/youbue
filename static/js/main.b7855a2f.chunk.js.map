{"version":3,"sources":["components/header.jsx","components/video_item/video_item.jsx","components/video_list/video_list.jsx","components/videos.jsx","components/video_detail/video_detail.jsx","app.jsx","index.js","service/youtubeService.js"],"names":["Header","props","formRef","useRef","className","action","onSubmit","e","preventDefault","keyword","current","value","handleSearch","ref","type","Video_item","src","video","snippet","thumbnails","medium","url","alt","channelTitle","title","Video_list","videos","map","index","onClick","onVideoClick","id","Videos","useState","setVideos","useEffect","youtube","showVideos","then","result","console","log","items","Video_detail","width","height","videoId","frameBorder","allowFullScreen","App","defaultUrl","setUrl","selectedVideo","setSelectedVideo","newUrl","beforeKey","afterKey","this","fetch","method","redirect","response","json","catch","error","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7855a2f.chunk.js","sourcesContent":["import React, {useRef} from 'react';\nimport {FaYoutube} from 'react-icons/fa';\nimport './header.css';\nfunction Header(props) {\n    const formRef = useRef();\n    function handleSubmit(e){\n        e.preventDefault();        \n        const keyword = formRef.current[0].value;                \n        props.handleSearch(keyword);\n    }\n    return (\n        <div className=\"header\">\n            <h1>            \n                <FaYoutube className=\"youtubeIcon\"/>                \n                Youtube 노.동.림\n            </h1>\n            <form action=\"\" onSubmit={handleSubmit} ref={formRef}>\n                <input type=\"search\" />\n                <button className=\"searchButton\">검색</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nfunction Video_item(props) {\n    // console.log(props.video.title);\n    return (\n        <>      \n        {/* {props.video.title}   */}\n            <img src={props.video.snippet.thumbnails.medium.url} alt=\"video thumbnail\"/>                    \n        <div className=\"videoInfo\">\n            <p className=\"videoChannel\">\n            {props.video.snippet.channelTitle}\n            </p>\n            <p className=\"videoTitle\">\n            {props.video.snippet.title}\n            </p>            \n        </div>\n        </>\n    )\n}\n\nexport default Video_item\n","import React from 'react';\nimport VideoItem from '../video_item/video_item';\nfunction Video_list(props) {\n   \n    return (\n        <ul className=\"videoList\">\n            {props.videos.map((video, index)=><li key={index} className=\"videoItem\" onClick={()=>props.onVideoClick(video)}><VideoItem id={video.id} video={video}/></li>)}\n        </ul>\n    )\n}\n\nexport default Video_list\n","import React,{useState, useEffect} from 'react';\nimport VideoList from './video_list/video_list';\nimport './videos.css'\nimport axios from 'axios';\nfunction Videos(props) {\n    // async function getData(){\n    //     const datas = await axios.get(\"https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=%EB%85%B8%EB%8F%99%EB%A6%BC&key=AIzaSyDhLRQLN-_jxsQM1AVCFg1CWxkUUtcQsRw\");\n    //     console.log(datas);\n    //     return datas;\n    // }\n    // const axiosData = getData();\n\n    // console.log(axiosData.data.items);\n    // const datas = axios.get(\"https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=%EB%85%B8%EB%8F%99%EB%A6%BC&key=AIzaSyDhLRQLN-_jxsQM1AVCFg1CWxkUUtcQsRw\");\n    // console.dir(datas);\n    // 이게 왜 콘솔에 안 나와?\n    // console.log(datas.data.items);\n    \n    //     const defaultVideos = props.youtube.defaultVideos().then(result=>{\n        //         return result;\n        //     });\n        //    console.log(\"defaultVideos: \",defaultVideos);\n        const [videos, setVideos] = useState([]);\n        useEffect(()=>{       \n        props.youtube.showVideos(props.url).then((result)=>{\n            console.log(result);\n            setVideos(result.items);\n        })\n    },[props.url])\n\n    useEffect(()=>{\n        console.log(videos);\n    },[videos])\n    \n    return (                \n        <VideoList videos={videos} onVideoClick={props.onVideoClick}/>   \n        // <div>example</div>      \n    )\n}\n\nexport default Videos\n","import React from 'react'\nimport './video_detail.css'\nfunction Video_detail(props) {\n    return (\n        <>\n        <h1>{props.video.snippet.title}</h1>\n        <section className=\"videoArea\">\n        <iframe\n            className=\"iframeVideo\"\n            id=\"ytplayer\" \n            type=\"text/html\" \n            width=\"100%\" \n            height=\"500px\"\n            src={`https://www.youtube.com/embed/${props.video.id.videoId}`}\n            frameBorder=\"0\"     \n            allowFullScreen></iframe>\n            <h2>{props.video.snippet.channelTitle}</h2>\n            <h3>귀염둥이 라성</h3>\n        </section>   \n        </>\n    )\n}\n\nexport default Video_detail\n","import React, {useState, useEffect} from 'react'\n\n\n\nimport Header from './components/header';\nimport Videos from './components/videos';\nimport VideoDetail from './components/video_detail/video_detail'\nimport './app.css';\n\n\n\n\nfunction App(props) {\n  // console.log(props.url);\n  const [url, setUrl] = useState(props.youtube.defaultUrl);\n  const [selectedVideo, setSelectedVideo] = useState(null);     \n  function handleSearch(keyword){    \n    const newUrl = `${props.youtube.beforeKey}${keyword}${props.youtube.afterKey}`;\n    setUrl(newUrl);\n  }\n  function selectVideo(video){\n    console.log(video);\n    setSelectedVideo(video);\n  }\n  useEffect(()=>{    \n    console.log(url);\n  },[url])\n  \n  return (\n    <>\n    <Header handleSearch={handleSearch} className=\"header\"/>\n    <section className=\"contents\">\n      <div className=\"videoDetail\">{selectedVideo&&<VideoDetail video={selectedVideo}/>}</div>\n      <div className=\"videos\"><Videos youtube={props.youtube} url={url} onVideoClick={selectVideo}/></div>      \n    </section>\n    </>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport Youtube from './service/youtubeService'\nconst youtube = new Youtube(process.env.REACT_APP_YOUTUBE_API_BEFOREKEY, process.env.REACT_APP_YOUTUBE_API_AFTERKEY, process.env.REACT_APP_YOUTUBE_API_DEFAULTURL);\n// env파일 만들고 여기서 세 번째 인자 집어넣는 것만 잘 안됨!! 아마 할당량 문제 -> 해결^^\nReactDOM.render(\n  <React.StrictMode>\n    <App youtube={youtube}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","class Youtube{\n    constructor(beforeKey, afterKey, defaultUrl){\n        \n        this.defaultUrl= defaultUrl;\n        // this.url= \"https://jsonplaceholder.typicode.com/albums\"\n        this.beforeKey = beforeKey;\n        this.afterKey = afterKey;\n        \n    }\n        \n         showVideos(url) {\n        // const url =this.url;\n        const requestOptions = {\n            method: \"GET\",\n            redirect: 'follow'\n        }\n        const videos= fetch(\n            url, requestOptions\n        )\n        .then(response=> response.json())\n        .then(result =>  {\n           return result;\n        })\n        // 원래 setVideos에 result.items집어 넣는 거였는데 result.items를 return하는 걸로 끝냄\n        .catch(error => console.log('errormessage::', error))\n        return videos;\n    }\n        // search(keyword){\n        //     const requestOptions = {\n        //         method: \"GET\",\n        //         redirect: 'follow'\n        //     }\n\n        //     const searchedVideos= fetch(\n        //         `https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${keyword}&key=AIzaSyDhLRQLN-_jxsQM1AVCFg1CWxkUUtcQsRw`, requestOptions\n        //     )\n        //     .then(response=> response.json())\n        //     .then(result=>{\n        //         return result;\n        //     })\n        //     .catch(error => console.log('errormessage::',error));\n        //     return searchedVideos\n        // }\n        \n}\n\nexport default Youtube;"],"sourceRoot":""}